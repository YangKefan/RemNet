// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RemNet.snapshotModel.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "RemNet.snapshotModel.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace RemNet {

namespace {

const ::google::protobuf::Descriptor* snapshotModel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  snapshotModel_reflection_ = NULL;
const ::google::protobuf::Descriptor* snapshotModel_paramBlok_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  snapshotModel_paramBlok_reflection_ = NULL;
const ::google::protobuf::Descriptor* snapshotModel_paramBlok_paramValue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  snapshotModel_paramBlok_paramValue_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_RemNet_2esnapshotModel_2eproto() {
  protobuf_AddDesc_RemNet_2esnapshotModel_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "RemNet.snapshotModel.proto");
  GOOGLE_CHECK(file != NULL);
  snapshotModel_descriptor_ = file->message_type(0);
  static const int snapshotModel_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(snapshotModel, param_blok_),
  };
  snapshotModel_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      snapshotModel_descriptor_,
      snapshotModel::default_instance_,
      snapshotModel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(snapshotModel, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(snapshotModel, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(snapshotModel));
  snapshotModel_paramBlok_descriptor_ = snapshotModel_descriptor_->nested_type(0);
  static const int snapshotModel_paramBlok_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(snapshotModel_paramBlok, param_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(snapshotModel_paramBlok, layer_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(snapshotModel_paramBlok, kernel_n_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(snapshotModel_paramBlok, kernel_c_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(snapshotModel_paramBlok, kernel_h_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(snapshotModel_paramBlok, kernel_w_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(snapshotModel_paramBlok, param_value_),
  };
  snapshotModel_paramBlok_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      snapshotModel_paramBlok_descriptor_,
      snapshotModel_paramBlok::default_instance_,
      snapshotModel_paramBlok_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(snapshotModel_paramBlok, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(snapshotModel_paramBlok, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(snapshotModel_paramBlok));
  snapshotModel_paramBlok_paramValue_descriptor_ = snapshotModel_paramBlok_descriptor_->nested_type(0);
  static const int snapshotModel_paramBlok_paramValue_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(snapshotModel_paramBlok_paramValue, value_),
  };
  snapshotModel_paramBlok_paramValue_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      snapshotModel_paramBlok_paramValue_descriptor_,
      snapshotModel_paramBlok_paramValue::default_instance_,
      snapshotModel_paramBlok_paramValue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(snapshotModel_paramBlok_paramValue, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(snapshotModel_paramBlok_paramValue, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(snapshotModel_paramBlok_paramValue));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_RemNet_2esnapshotModel_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    snapshotModel_descriptor_, &snapshotModel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    snapshotModel_paramBlok_descriptor_, &snapshotModel_paramBlok::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    snapshotModel_paramBlok_paramValue_descriptor_, &snapshotModel_paramBlok_paramValue::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_RemNet_2esnapshotModel_2eproto() {
  delete snapshotModel::default_instance_;
  delete snapshotModel_reflection_;
  delete snapshotModel_paramBlok::default_instance_;
  delete snapshotModel_paramBlok_reflection_;
  delete snapshotModel_paramBlok_paramValue::default_instance_;
  delete snapshotModel_paramBlok_paramValue_reflection_;
}

void protobuf_AddDesc_RemNet_2esnapshotModel_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032RemNet.snapshotModel.proto\022\006RemNet\"\240\002\n"
    "\rsnapshotModel\0223\n\nparam_blok\030\001 \003(\0132\037.Rem"
    "Net.snapshotModel.paramBlok\032\331\001\n\tparamBlo"
    "k\022\022\n\nparam_type\030\001 \002(\t\022\022\n\nlayer_name\030\002 \002("
    "\t\022\020\n\010kernel_n\030\003 \002(\005\022\020\n\010kernel_c\030\004 \002(\005\022\020\n"
    "\010kernel_h\030\005 \002(\005\022\020\n\010kernel_w\030\006 \002(\005\022\?\n\013par"
    "am_value\030\007 \003(\0132*.RemNet.snapshotModel.pa"
    "ramBlok.paramValue\032\033\n\nparamValue\022\r\n\005valu"
    "e\030\001 \002(\001", 327);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RemNet.snapshotModel.proto", &protobuf_RegisterTypes);
  snapshotModel::default_instance_ = new snapshotModel();
  snapshotModel_paramBlok::default_instance_ = new snapshotModel_paramBlok();
  snapshotModel_paramBlok_paramValue::default_instance_ = new snapshotModel_paramBlok_paramValue();
  snapshotModel::default_instance_->InitAsDefaultInstance();
  snapshotModel_paramBlok::default_instance_->InitAsDefaultInstance();
  snapshotModel_paramBlok_paramValue::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RemNet_2esnapshotModel_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RemNet_2esnapshotModel_2eproto {
  StaticDescriptorInitializer_RemNet_2esnapshotModel_2eproto() {
    protobuf_AddDesc_RemNet_2esnapshotModel_2eproto();
  }
} static_descriptor_initializer_RemNet_2esnapshotModel_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int snapshotModel_paramBlok_paramValue::kValueFieldNumber;
#endif  // !_MSC_VER

snapshotModel_paramBlok_paramValue::snapshotModel_paramBlok_paramValue()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void snapshotModel_paramBlok_paramValue::InitAsDefaultInstance() {
}

snapshotModel_paramBlok_paramValue::snapshotModel_paramBlok_paramValue(const snapshotModel_paramBlok_paramValue& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void snapshotModel_paramBlok_paramValue::SharedCtor() {
  _cached_size_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

snapshotModel_paramBlok_paramValue::~snapshotModel_paramBlok_paramValue() {
  SharedDtor();
}

void snapshotModel_paramBlok_paramValue::SharedDtor() {
  if (this != default_instance_) {
  }
}

void snapshotModel_paramBlok_paramValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* snapshotModel_paramBlok_paramValue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return snapshotModel_paramBlok_paramValue_descriptor_;
}

const snapshotModel_paramBlok_paramValue& snapshotModel_paramBlok_paramValue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RemNet_2esnapshotModel_2eproto();
  return *default_instance_;
}

snapshotModel_paramBlok_paramValue* snapshotModel_paramBlok_paramValue::default_instance_ = NULL;

snapshotModel_paramBlok_paramValue* snapshotModel_paramBlok_paramValue::New() const {
  return new snapshotModel_paramBlok_paramValue;
}

void snapshotModel_paramBlok_paramValue::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool snapshotModel_paramBlok_paramValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void snapshotModel_paramBlok_paramValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required double value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* snapshotModel_paramBlok_paramValue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required double value = 1;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int snapshotModel_paramBlok_paramValue::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double value = 1;
    if (has_value()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void snapshotModel_paramBlok_paramValue::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const snapshotModel_paramBlok_paramValue* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const snapshotModel_paramBlok_paramValue*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void snapshotModel_paramBlok_paramValue::MergeFrom(const snapshotModel_paramBlok_paramValue& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void snapshotModel_paramBlok_paramValue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void snapshotModel_paramBlok_paramValue::CopyFrom(const snapshotModel_paramBlok_paramValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool snapshotModel_paramBlok_paramValue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void snapshotModel_paramBlok_paramValue::Swap(snapshotModel_paramBlok_paramValue* other) {
  if (other != this) {
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata snapshotModel_paramBlok_paramValue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = snapshotModel_paramBlok_paramValue_descriptor_;
  metadata.reflection = snapshotModel_paramBlok_paramValue_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int snapshotModel_paramBlok::kParamTypeFieldNumber;
const int snapshotModel_paramBlok::kLayerNameFieldNumber;
const int snapshotModel_paramBlok::kKernelNFieldNumber;
const int snapshotModel_paramBlok::kKernelCFieldNumber;
const int snapshotModel_paramBlok::kKernelHFieldNumber;
const int snapshotModel_paramBlok::kKernelWFieldNumber;
const int snapshotModel_paramBlok::kParamValueFieldNumber;
#endif  // !_MSC_VER

snapshotModel_paramBlok::snapshotModel_paramBlok()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void snapshotModel_paramBlok::InitAsDefaultInstance() {
}

snapshotModel_paramBlok::snapshotModel_paramBlok(const snapshotModel_paramBlok& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void snapshotModel_paramBlok::SharedCtor() {
  _cached_size_ = 0;
  param_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  layer_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  kernel_n_ = 0;
  kernel_c_ = 0;
  kernel_h_ = 0;
  kernel_w_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

snapshotModel_paramBlok::~snapshotModel_paramBlok() {
  SharedDtor();
}

void snapshotModel_paramBlok::SharedDtor() {
  if (param_type_ != &::google::protobuf::internal::kEmptyString) {
    delete param_type_;
  }
  if (layer_name_ != &::google::protobuf::internal::kEmptyString) {
    delete layer_name_;
  }
  if (this != default_instance_) {
  }
}

void snapshotModel_paramBlok::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* snapshotModel_paramBlok::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return snapshotModel_paramBlok_descriptor_;
}

const snapshotModel_paramBlok& snapshotModel_paramBlok::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RemNet_2esnapshotModel_2eproto();
  return *default_instance_;
}

snapshotModel_paramBlok* snapshotModel_paramBlok::default_instance_ = NULL;

snapshotModel_paramBlok* snapshotModel_paramBlok::New() const {
  return new snapshotModel_paramBlok;
}

void snapshotModel_paramBlok::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_param_type()) {
      if (param_type_ != &::google::protobuf::internal::kEmptyString) {
        param_type_->clear();
      }
    }
    if (has_layer_name()) {
      if (layer_name_ != &::google::protobuf::internal::kEmptyString) {
        layer_name_->clear();
      }
    }
    kernel_n_ = 0;
    kernel_c_ = 0;
    kernel_h_ = 0;
    kernel_w_ = 0;
  }
  param_value_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool snapshotModel_paramBlok::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string param_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_param_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->param_type().data(), this->param_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_layer_name;
        break;
      }

      // required string layer_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_layer_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_layer_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->layer_name().data(), this->layer_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_kernel_n;
        break;
      }

      // required int32 kernel_n = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_kernel_n:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kernel_n_)));
          set_has_kernel_n();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_kernel_c;
        break;
      }

      // required int32 kernel_c = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_kernel_c:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kernel_c_)));
          set_has_kernel_c();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_kernel_h;
        break;
      }

      // required int32 kernel_h = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_kernel_h:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kernel_h_)));
          set_has_kernel_h();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_kernel_w;
        break;
      }

      // required int32 kernel_w = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_kernel_w:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kernel_w_)));
          set_has_kernel_w();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_param_value;
        break;
      }

      // repeated .RemNet.snapshotModel.paramBlok.paramValue param_value = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_param_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_param_value()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_param_value;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void snapshotModel_paramBlok::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string param_type = 1;
  if (has_param_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->param_type().data(), this->param_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->param_type(), output);
  }

  // required string layer_name = 2;
  if (has_layer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->layer_name().data(), this->layer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->layer_name(), output);
  }

  // required int32 kernel_n = 3;
  if (has_kernel_n()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->kernel_n(), output);
  }

  // required int32 kernel_c = 4;
  if (has_kernel_c()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->kernel_c(), output);
  }

  // required int32 kernel_h = 5;
  if (has_kernel_h()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->kernel_h(), output);
  }

  // required int32 kernel_w = 6;
  if (has_kernel_w()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->kernel_w(), output);
  }

  // repeated .RemNet.snapshotModel.paramBlok.paramValue param_value = 7;
  for (int i = 0; i < this->param_value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->param_value(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* snapshotModel_paramBlok::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string param_type = 1;
  if (has_param_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->param_type().data(), this->param_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->param_type(), target);
  }

  // required string layer_name = 2;
  if (has_layer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->layer_name().data(), this->layer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->layer_name(), target);
  }

  // required int32 kernel_n = 3;
  if (has_kernel_n()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->kernel_n(), target);
  }

  // required int32 kernel_c = 4;
  if (has_kernel_c()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->kernel_c(), target);
  }

  // required int32 kernel_h = 5;
  if (has_kernel_h()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->kernel_h(), target);
  }

  // required int32 kernel_w = 6;
  if (has_kernel_w()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->kernel_w(), target);
  }

  // repeated .RemNet.snapshotModel.paramBlok.paramValue param_value = 7;
  for (int i = 0; i < this->param_value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->param_value(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int snapshotModel_paramBlok::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string param_type = 1;
    if (has_param_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->param_type());
    }

    // required string layer_name = 2;
    if (has_layer_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->layer_name());
    }

    // required int32 kernel_n = 3;
    if (has_kernel_n()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->kernel_n());
    }

    // required int32 kernel_c = 4;
    if (has_kernel_c()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->kernel_c());
    }

    // required int32 kernel_h = 5;
    if (has_kernel_h()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->kernel_h());
    }

    // required int32 kernel_w = 6;
    if (has_kernel_w()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->kernel_w());
    }

  }
  // repeated .RemNet.snapshotModel.paramBlok.paramValue param_value = 7;
  total_size += 1 * this->param_value_size();
  for (int i = 0; i < this->param_value_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->param_value(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void snapshotModel_paramBlok::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const snapshotModel_paramBlok* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const snapshotModel_paramBlok*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void snapshotModel_paramBlok::MergeFrom(const snapshotModel_paramBlok& from) {
  GOOGLE_CHECK_NE(&from, this);
  param_value_.MergeFrom(from.param_value_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_param_type()) {
      set_param_type(from.param_type());
    }
    if (from.has_layer_name()) {
      set_layer_name(from.layer_name());
    }
    if (from.has_kernel_n()) {
      set_kernel_n(from.kernel_n());
    }
    if (from.has_kernel_c()) {
      set_kernel_c(from.kernel_c());
    }
    if (from.has_kernel_h()) {
      set_kernel_h(from.kernel_h());
    }
    if (from.has_kernel_w()) {
      set_kernel_w(from.kernel_w());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void snapshotModel_paramBlok::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void snapshotModel_paramBlok::CopyFrom(const snapshotModel_paramBlok& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool snapshotModel_paramBlok::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  for (int i = 0; i < param_value_size(); i++) {
    if (!this->param_value(i).IsInitialized()) return false;
  }
  return true;
}

void snapshotModel_paramBlok::Swap(snapshotModel_paramBlok* other) {
  if (other != this) {
    std::swap(param_type_, other->param_type_);
    std::swap(layer_name_, other->layer_name_);
    std::swap(kernel_n_, other->kernel_n_);
    std::swap(kernel_c_, other->kernel_c_);
    std::swap(kernel_h_, other->kernel_h_);
    std::swap(kernel_w_, other->kernel_w_);
    param_value_.Swap(&other->param_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata snapshotModel_paramBlok::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = snapshotModel_paramBlok_descriptor_;
  metadata.reflection = snapshotModel_paramBlok_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int snapshotModel::kParamBlokFieldNumber;
#endif  // !_MSC_VER

snapshotModel::snapshotModel()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void snapshotModel::InitAsDefaultInstance() {
}

snapshotModel::snapshotModel(const snapshotModel& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void snapshotModel::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

snapshotModel::~snapshotModel() {
  SharedDtor();
}

void snapshotModel::SharedDtor() {
  if (this != default_instance_) {
  }
}

void snapshotModel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* snapshotModel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return snapshotModel_descriptor_;
}

const snapshotModel& snapshotModel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RemNet_2esnapshotModel_2eproto();
  return *default_instance_;
}

snapshotModel* snapshotModel::default_instance_ = NULL;

snapshotModel* snapshotModel::New() const {
  return new snapshotModel;
}

void snapshotModel::Clear() {
  param_blok_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool snapshotModel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .RemNet.snapshotModel.paramBlok param_blok = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_param_blok:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_param_blok()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_param_blok;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void snapshotModel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .RemNet.snapshotModel.paramBlok param_blok = 1;
  for (int i = 0; i < this->param_blok_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->param_blok(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* snapshotModel::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .RemNet.snapshotModel.paramBlok param_blok = 1;
  for (int i = 0; i < this->param_blok_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->param_blok(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int snapshotModel::ByteSize() const {
  int total_size = 0;

  // repeated .RemNet.snapshotModel.paramBlok param_blok = 1;
  total_size += 1 * this->param_blok_size();
  for (int i = 0; i < this->param_blok_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->param_blok(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void snapshotModel::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const snapshotModel* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const snapshotModel*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void snapshotModel::MergeFrom(const snapshotModel& from) {
  GOOGLE_CHECK_NE(&from, this);
  param_blok_.MergeFrom(from.param_blok_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void snapshotModel::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void snapshotModel::CopyFrom(const snapshotModel& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool snapshotModel::IsInitialized() const {

  for (int i = 0; i < param_blok_size(); i++) {
    if (!this->param_blok(i).IsInitialized()) return false;
  }
  return true;
}

void snapshotModel::Swap(snapshotModel* other) {
  if (other != this) {
    param_blok_.Swap(&other->param_blok_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata snapshotModel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = snapshotModel_descriptor_;
  metadata.reflection = snapshotModel_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace RemNet

// @@protoc_insertion_point(global_scope)
