//  Network configuration
{
  "train": {
    // learning rate
    "learning rate": 0.001,

    // Whether to update the learning rate?
    "frequence update": true,

    // Learning rate decay coefficient
    "lr decay": 0.99,

    // Optimizer sgd/momentum/rmsprop/adagrad
    "update method": "rmsprop",

    // Momentum optimizer coefficient decay
    "momentum parameter": 0.95,

    // Rmsprop optimizer coefficient decay
    "rmsprop": 0.95,

    // L2 Regularization coefficient
    "reg coefficient": 0,

    "epochs": 2,

    // Whether to use mini-batch gradient descent algorithm for optimization
    "use batch": true,

    "batch size": 32,

    // every acc_frequence do evaluate
    "acc frequence": 2,

    // Whether you need to save the model?
    "snapshot": false,

    // Save the model every few iterations
    "snapshot interval": 5,

    // Whether to train with fine tune
    "fine tune": false,

    // The path of the pretrained model
    "pre trained model": "./iter40.RemNetModel"
  },

  "net": [
    {
      "name": "drop1", // Layer name
      "type": "Dropout", // Layer type
      "drop rate": 0.5 // Dropout coefficient
    },

    {
      "name": "bn", // Layer name
      "type": "BN" // Layer type
    },

    {
      "name": "conv1", // layer name
      "type": "Conv", // layer type
      "kernel num": 10, // Convolution kernel number
      "kernel height": 3, // Convolution kernel height
      "kernel width": 3, // Convolution kernel width
      "pad": 1, // pad number
      "stride": 1, // stride
      "conv weight init": "msra" // Weight initialization method msra/gaussian
    },

    {
      "name": "relu1", // Layer name
      "type": "ReLU" // Layer type
    },

    {
      "name": "pool1", // Layer name
      "type": "Pool", // Layer type
      "kernel height": 2, // Pooling nuclear high
      "kernel width": 2, // Pooling nuclear width
      "stride": 1 // stride
    },

    {
      "name": "fc1", // Layer name
      "type": "FC", // Layer type
      "kernel num": 256, // Number of neurons
      "fc weight init": "msra" // Weight initialization method msra/gaussian
    },

    {
      "name": "drop2",
      "type": "Dropout",
      "drop rate": 0.5
    },

    {
      "name": "fc2",
      "type": "FC",
      "kernel num": 128,
      "fc weight init": "msra"
    },

    {
      "name": "fc3",
      "type": "FC",
      "kernel num": 10,
      "fc weight init": "msra"
    },

    {
      // Loss Layer, you can choose Softmax or SVM
      //"name": "softmax", // ≤„√˚
      //"type": "Softmax" // ≤„¿‡–Õ
      "name": "SVM",
      "type": "SVM"
    }
  ]
}