// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RemNet.snapshotModel.proto

#ifndef PROTOBUF_RemNet_2esnapshotModel_2eproto__INCLUDED
#define PROTOBUF_RemNet_2esnapshotModel_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace RemNet {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RemNet_2esnapshotModel_2eproto();
void protobuf_AssignDesc_RemNet_2esnapshotModel_2eproto();
void protobuf_ShutdownFile_RemNet_2esnapshotModel_2eproto();

class snapshotModel;
class snapshotModel_paramBlok;
class snapshotModel_paramBlok_paramValue;

// ===================================================================

class snapshotModel_paramBlok_paramValue : public ::google::protobuf::Message {
 public:
  snapshotModel_paramBlok_paramValue();
  virtual ~snapshotModel_paramBlok_paramValue();

  snapshotModel_paramBlok_paramValue(const snapshotModel_paramBlok_paramValue& from);

  inline snapshotModel_paramBlok_paramValue& operator=(const snapshotModel_paramBlok_paramValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const snapshotModel_paramBlok_paramValue& default_instance();

  void Swap(snapshotModel_paramBlok_paramValue* other);

  // implements Message ----------------------------------------------

  snapshotModel_paramBlok_paramValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const snapshotModel_paramBlok_paramValue& from);
  void MergeFrom(const snapshotModel_paramBlok_paramValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline double value() const;
  inline void set_value(double value);

  // @@protoc_insertion_point(class_scope:RemNet.snapshotModel.paramBlok.paramValue)
 private:
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  double value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RemNet_2esnapshotModel_2eproto();
  friend void protobuf_AssignDesc_RemNet_2esnapshotModel_2eproto();
  friend void protobuf_ShutdownFile_RemNet_2esnapshotModel_2eproto();

  void InitAsDefaultInstance();
  static snapshotModel_paramBlok_paramValue* default_instance_;
};
// -------------------------------------------------------------------

class snapshotModel_paramBlok : public ::google::protobuf::Message {
 public:
  snapshotModel_paramBlok();
  virtual ~snapshotModel_paramBlok();

  snapshotModel_paramBlok(const snapshotModel_paramBlok& from);

  inline snapshotModel_paramBlok& operator=(const snapshotModel_paramBlok& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const snapshotModel_paramBlok& default_instance();

  void Swap(snapshotModel_paramBlok* other);

  // implements Message ----------------------------------------------

  snapshotModel_paramBlok* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const snapshotModel_paramBlok& from);
  void MergeFrom(const snapshotModel_paramBlok& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef snapshotModel_paramBlok_paramValue paramValue;

  // accessors -------------------------------------------------------

  // required string param_type = 1;
  inline bool has_param_type() const;
  inline void clear_param_type();
  static const int kParamTypeFieldNumber = 1;
  inline const ::std::string& param_type() const;
  inline void set_param_type(const ::std::string& value);
  inline void set_param_type(const char* value);
  inline void set_param_type(const char* value, size_t size);
  inline ::std::string* mutable_param_type();
  inline ::std::string* release_param_type();
  inline void set_allocated_param_type(::std::string* param_type);

  // required string layer_name = 2;
  inline bool has_layer_name() const;
  inline void clear_layer_name();
  static const int kLayerNameFieldNumber = 2;
  inline const ::std::string& layer_name() const;
  inline void set_layer_name(const ::std::string& value);
  inline void set_layer_name(const char* value);
  inline void set_layer_name(const char* value, size_t size);
  inline ::std::string* mutable_layer_name();
  inline ::std::string* release_layer_name();
  inline void set_allocated_layer_name(::std::string* layer_name);

  // required int32 kernel_n = 3;
  inline bool has_kernel_n() const;
  inline void clear_kernel_n();
  static const int kKernelNFieldNumber = 3;
  inline ::google::protobuf::int32 kernel_n() const;
  inline void set_kernel_n(::google::protobuf::int32 value);

  // required int32 kernel_c = 4;
  inline bool has_kernel_c() const;
  inline void clear_kernel_c();
  static const int kKernelCFieldNumber = 4;
  inline ::google::protobuf::int32 kernel_c() const;
  inline void set_kernel_c(::google::protobuf::int32 value);

  // required int32 kernel_h = 5;
  inline bool has_kernel_h() const;
  inline void clear_kernel_h();
  static const int kKernelHFieldNumber = 5;
  inline ::google::protobuf::int32 kernel_h() const;
  inline void set_kernel_h(::google::protobuf::int32 value);

  // required int32 kernel_w = 6;
  inline bool has_kernel_w() const;
  inline void clear_kernel_w();
  static const int kKernelWFieldNumber = 6;
  inline ::google::protobuf::int32 kernel_w() const;
  inline void set_kernel_w(::google::protobuf::int32 value);

  // repeated .RemNet.snapshotModel.paramBlok.paramValue param_value = 7;
  inline int param_value_size() const;
  inline void clear_param_value();
  static const int kParamValueFieldNumber = 7;
  inline const ::RemNet::snapshotModel_paramBlok_paramValue& param_value(int index) const;
  inline ::RemNet::snapshotModel_paramBlok_paramValue* mutable_param_value(int index);
  inline ::RemNet::snapshotModel_paramBlok_paramValue* add_param_value();
  inline const ::google::protobuf::RepeatedPtrField< ::RemNet::snapshotModel_paramBlok_paramValue >&
      param_value() const;
  inline ::google::protobuf::RepeatedPtrField< ::RemNet::snapshotModel_paramBlok_paramValue >*
      mutable_param_value();

  // @@protoc_insertion_point(class_scope:RemNet.snapshotModel.paramBlok)
 private:
  inline void set_has_param_type();
  inline void clear_has_param_type();
  inline void set_has_layer_name();
  inline void clear_has_layer_name();
  inline void set_has_kernel_n();
  inline void clear_has_kernel_n();
  inline void set_has_kernel_c();
  inline void clear_has_kernel_c();
  inline void set_has_kernel_h();
  inline void clear_has_kernel_h();
  inline void set_has_kernel_w();
  inline void clear_has_kernel_w();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* param_type_;
  ::std::string* layer_name_;
  ::google::protobuf::int32 kernel_n_;
  ::google::protobuf::int32 kernel_c_;
  ::google::protobuf::int32 kernel_h_;
  ::google::protobuf::int32 kernel_w_;
  ::google::protobuf::RepeatedPtrField< ::RemNet::snapshotModel_paramBlok_paramValue > param_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_RemNet_2esnapshotModel_2eproto();
  friend void protobuf_AssignDesc_RemNet_2esnapshotModel_2eproto();
  friend void protobuf_ShutdownFile_RemNet_2esnapshotModel_2eproto();

  void InitAsDefaultInstance();
  static snapshotModel_paramBlok* default_instance_;
};
// -------------------------------------------------------------------

class snapshotModel : public ::google::protobuf::Message {
 public:
  snapshotModel();
  virtual ~snapshotModel();

  snapshotModel(const snapshotModel& from);

  inline snapshotModel& operator=(const snapshotModel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const snapshotModel& default_instance();

  void Swap(snapshotModel* other);

  // implements Message ----------------------------------------------

  snapshotModel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const snapshotModel& from);
  void MergeFrom(const snapshotModel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef snapshotModel_paramBlok paramBlok;

  // accessors -------------------------------------------------------

  // repeated .RemNet.snapshotModel.paramBlok param_blok = 1;
  inline int param_blok_size() const;
  inline void clear_param_blok();
  static const int kParamBlokFieldNumber = 1;
  inline const ::RemNet::snapshotModel_paramBlok& param_blok(int index) const;
  inline ::RemNet::snapshotModel_paramBlok* mutable_param_blok(int index);
  inline ::RemNet::snapshotModel_paramBlok* add_param_blok();
  inline const ::google::protobuf::RepeatedPtrField< ::RemNet::snapshotModel_paramBlok >&
      param_blok() const;
  inline ::google::protobuf::RepeatedPtrField< ::RemNet::snapshotModel_paramBlok >*
      mutable_param_blok();

  // @@protoc_insertion_point(class_scope:RemNet.snapshotModel)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::RemNet::snapshotModel_paramBlok > param_blok_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_RemNet_2esnapshotModel_2eproto();
  friend void protobuf_AssignDesc_RemNet_2esnapshotModel_2eproto();
  friend void protobuf_ShutdownFile_RemNet_2esnapshotModel_2eproto();

  void InitAsDefaultInstance();
  static snapshotModel* default_instance_;
};
// ===================================================================


// ===================================================================

// snapshotModel_paramBlok_paramValue

// required double value = 1;
inline bool snapshotModel_paramBlok_paramValue::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void snapshotModel_paramBlok_paramValue::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void snapshotModel_paramBlok_paramValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void snapshotModel_paramBlok_paramValue::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline double snapshotModel_paramBlok_paramValue::value() const {
  return value_;
}
inline void snapshotModel_paramBlok_paramValue::set_value(double value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// snapshotModel_paramBlok

// required string param_type = 1;
inline bool snapshotModel_paramBlok::has_param_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void snapshotModel_paramBlok::set_has_param_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void snapshotModel_paramBlok::clear_has_param_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void snapshotModel_paramBlok::clear_param_type() {
  if (param_type_ != &::google::protobuf::internal::kEmptyString) {
    param_type_->clear();
  }
  clear_has_param_type();
}
inline const ::std::string& snapshotModel_paramBlok::param_type() const {
  return *param_type_;
}
inline void snapshotModel_paramBlok::set_param_type(const ::std::string& value) {
  set_has_param_type();
  if (param_type_ == &::google::protobuf::internal::kEmptyString) {
    param_type_ = new ::std::string;
  }
  param_type_->assign(value);
}
inline void snapshotModel_paramBlok::set_param_type(const char* value) {
  set_has_param_type();
  if (param_type_ == &::google::protobuf::internal::kEmptyString) {
    param_type_ = new ::std::string;
  }
  param_type_->assign(value);
}
inline void snapshotModel_paramBlok::set_param_type(const char* value, size_t size) {
  set_has_param_type();
  if (param_type_ == &::google::protobuf::internal::kEmptyString) {
    param_type_ = new ::std::string;
  }
  param_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* snapshotModel_paramBlok::mutable_param_type() {
  set_has_param_type();
  if (param_type_ == &::google::protobuf::internal::kEmptyString) {
    param_type_ = new ::std::string;
  }
  return param_type_;
}
inline ::std::string* snapshotModel_paramBlok::release_param_type() {
  clear_has_param_type();
  if (param_type_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = param_type_;
    param_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void snapshotModel_paramBlok::set_allocated_param_type(::std::string* param_type) {
  if (param_type_ != &::google::protobuf::internal::kEmptyString) {
    delete param_type_;
  }
  if (param_type) {
    set_has_param_type();
    param_type_ = param_type;
  } else {
    clear_has_param_type();
    param_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string layer_name = 2;
inline bool snapshotModel_paramBlok::has_layer_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void snapshotModel_paramBlok::set_has_layer_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void snapshotModel_paramBlok::clear_has_layer_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void snapshotModel_paramBlok::clear_layer_name() {
  if (layer_name_ != &::google::protobuf::internal::kEmptyString) {
    layer_name_->clear();
  }
  clear_has_layer_name();
}
inline const ::std::string& snapshotModel_paramBlok::layer_name() const {
  return *layer_name_;
}
inline void snapshotModel_paramBlok::set_layer_name(const ::std::string& value) {
  set_has_layer_name();
  if (layer_name_ == &::google::protobuf::internal::kEmptyString) {
    layer_name_ = new ::std::string;
  }
  layer_name_->assign(value);
}
inline void snapshotModel_paramBlok::set_layer_name(const char* value) {
  set_has_layer_name();
  if (layer_name_ == &::google::protobuf::internal::kEmptyString) {
    layer_name_ = new ::std::string;
  }
  layer_name_->assign(value);
}
inline void snapshotModel_paramBlok::set_layer_name(const char* value, size_t size) {
  set_has_layer_name();
  if (layer_name_ == &::google::protobuf::internal::kEmptyString) {
    layer_name_ = new ::std::string;
  }
  layer_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* snapshotModel_paramBlok::mutable_layer_name() {
  set_has_layer_name();
  if (layer_name_ == &::google::protobuf::internal::kEmptyString) {
    layer_name_ = new ::std::string;
  }
  return layer_name_;
}
inline ::std::string* snapshotModel_paramBlok::release_layer_name() {
  clear_has_layer_name();
  if (layer_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = layer_name_;
    layer_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void snapshotModel_paramBlok::set_allocated_layer_name(::std::string* layer_name) {
  if (layer_name_ != &::google::protobuf::internal::kEmptyString) {
    delete layer_name_;
  }
  if (layer_name) {
    set_has_layer_name();
    layer_name_ = layer_name;
  } else {
    clear_has_layer_name();
    layer_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 kernel_n = 3;
inline bool snapshotModel_paramBlok::has_kernel_n() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void snapshotModel_paramBlok::set_has_kernel_n() {
  _has_bits_[0] |= 0x00000004u;
}
inline void snapshotModel_paramBlok::clear_has_kernel_n() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void snapshotModel_paramBlok::clear_kernel_n() {
  kernel_n_ = 0;
  clear_has_kernel_n();
}
inline ::google::protobuf::int32 snapshotModel_paramBlok::kernel_n() const {
  return kernel_n_;
}
inline void snapshotModel_paramBlok::set_kernel_n(::google::protobuf::int32 value) {
  set_has_kernel_n();
  kernel_n_ = value;
}

// required int32 kernel_c = 4;
inline bool snapshotModel_paramBlok::has_kernel_c() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void snapshotModel_paramBlok::set_has_kernel_c() {
  _has_bits_[0] |= 0x00000008u;
}
inline void snapshotModel_paramBlok::clear_has_kernel_c() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void snapshotModel_paramBlok::clear_kernel_c() {
  kernel_c_ = 0;
  clear_has_kernel_c();
}
inline ::google::protobuf::int32 snapshotModel_paramBlok::kernel_c() const {
  return kernel_c_;
}
inline void snapshotModel_paramBlok::set_kernel_c(::google::protobuf::int32 value) {
  set_has_kernel_c();
  kernel_c_ = value;
}

// required int32 kernel_h = 5;
inline bool snapshotModel_paramBlok::has_kernel_h() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void snapshotModel_paramBlok::set_has_kernel_h() {
  _has_bits_[0] |= 0x00000010u;
}
inline void snapshotModel_paramBlok::clear_has_kernel_h() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void snapshotModel_paramBlok::clear_kernel_h() {
  kernel_h_ = 0;
  clear_has_kernel_h();
}
inline ::google::protobuf::int32 snapshotModel_paramBlok::kernel_h() const {
  return kernel_h_;
}
inline void snapshotModel_paramBlok::set_kernel_h(::google::protobuf::int32 value) {
  set_has_kernel_h();
  kernel_h_ = value;
}

// required int32 kernel_w = 6;
inline bool snapshotModel_paramBlok::has_kernel_w() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void snapshotModel_paramBlok::set_has_kernel_w() {
  _has_bits_[0] |= 0x00000020u;
}
inline void snapshotModel_paramBlok::clear_has_kernel_w() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void snapshotModel_paramBlok::clear_kernel_w() {
  kernel_w_ = 0;
  clear_has_kernel_w();
}
inline ::google::protobuf::int32 snapshotModel_paramBlok::kernel_w() const {
  return kernel_w_;
}
inline void snapshotModel_paramBlok::set_kernel_w(::google::protobuf::int32 value) {
  set_has_kernel_w();
  kernel_w_ = value;
}

// repeated .RemNet.snapshotModel.paramBlok.paramValue param_value = 7;
inline int snapshotModel_paramBlok::param_value_size() const {
  return param_value_.size();
}
inline void snapshotModel_paramBlok::clear_param_value() {
  param_value_.Clear();
}
inline const ::RemNet::snapshotModel_paramBlok_paramValue& snapshotModel_paramBlok::param_value(int index) const {
  return param_value_.Get(index);
}
inline ::RemNet::snapshotModel_paramBlok_paramValue* snapshotModel_paramBlok::mutable_param_value(int index) {
  return param_value_.Mutable(index);
}
inline ::RemNet::snapshotModel_paramBlok_paramValue* snapshotModel_paramBlok::add_param_value() {
  return param_value_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RemNet::snapshotModel_paramBlok_paramValue >&
snapshotModel_paramBlok::param_value() const {
  return param_value_;
}
inline ::google::protobuf::RepeatedPtrField< ::RemNet::snapshotModel_paramBlok_paramValue >*
snapshotModel_paramBlok::mutable_param_value() {
  return &param_value_;
}

// -------------------------------------------------------------------

// snapshotModel

// repeated .RemNet.snapshotModel.paramBlok param_blok = 1;
inline int snapshotModel::param_blok_size() const {
  return param_blok_.size();
}
inline void snapshotModel::clear_param_blok() {
  param_blok_.Clear();
}
inline const ::RemNet::snapshotModel_paramBlok& snapshotModel::param_blok(int index) const {
  return param_blok_.Get(index);
}
inline ::RemNet::snapshotModel_paramBlok* snapshotModel::mutable_param_blok(int index) {
  return param_blok_.Mutable(index);
}
inline ::RemNet::snapshotModel_paramBlok* snapshotModel::add_param_blok() {
  return param_blok_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RemNet::snapshotModel_paramBlok >&
snapshotModel::param_blok() const {
  return param_blok_;
}
inline ::google::protobuf::RepeatedPtrField< ::RemNet::snapshotModel_paramBlok >*
snapshotModel::mutable_param_blok() {
  return &param_blok_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace RemNet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RemNet_2esnapshotModel_2eproto__INCLUDED
